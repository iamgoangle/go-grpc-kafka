// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/proto/v1/topic.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Topic struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price                int32    `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	CategoryId           string   `protobuf:"bytes,5,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Topic) Reset()         { *m = Topic{} }
func (m *Topic) String() string { return proto.CompactTextString(m) }
func (*Topic) ProtoMessage()    {}
func (*Topic) Descriptor() ([]byte, []int) {
	return fileDescriptor_31f1388eb7d396aa, []int{0}
}

func (m *Topic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Topic.Unmarshal(m, b)
}
func (m *Topic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Topic.Marshal(b, m, deterministic)
}
func (m *Topic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Topic.Merge(m, src)
}
func (m *Topic) XXX_Size() int {
	return xxx_messageInfo_Topic.Size(m)
}
func (m *Topic) XXX_DiscardUnknown() {
	xxx_messageInfo_Topic.DiscardUnknown(m)
}

var xxx_messageInfo_Topic proto.InternalMessageInfo

func (m *Topic) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Topic) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Topic) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Topic) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Topic) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

type GetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_31f1388eb7d396aa, []int{1}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

type Response struct {
	Created              bool     `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Topic                *Topic   `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Topics               []*Topic `protobuf:"bytes,3,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_31f1388eb7d396aa, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response) GetTopic() *Topic {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *Response) GetTopics() []*Topic {
	if m != nil {
		return m.Topics
	}
	return nil
}

func init() {
	proto.RegisterType((*Topic)(nil), "v1.Topic")
	proto.RegisterType((*GetRequest)(nil), "v1.GetRequest")
	proto.RegisterType((*Response)(nil), "v1.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TopicServiceClient is the client API for TopicService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TopicServiceClient interface {
	CreateTopic(ctx context.Context, in *Topic, opts ...grpc.CallOption) (*Response, error)
	GetTopics(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Response, error)
}

type topicServiceClient struct {
	cc *grpc.ClientConn
}

func NewTopicServiceClient(cc *grpc.ClientConn) TopicServiceClient {
	return &topicServiceClient{cc}
}

func (c *topicServiceClient) CreateTopic(ctx context.Context, in *Topic, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/v1.TopicService/CreateTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *topicServiceClient) GetTopics(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/v1.TopicService/GetTopics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TopicServiceServer is the server API for TopicService service.
type TopicServiceServer interface {
	CreateTopic(context.Context, *Topic) (*Response, error)
	GetTopics(context.Context, *GetRequest) (*Response, error)
}

func RegisterTopicServiceServer(s *grpc.Server, srv TopicServiceServer) {
	s.RegisterService(&_TopicService_serviceDesc, srv)
}

func _TopicService_CreateTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Topic)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopicServiceServer).CreateTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.TopicService/CreateTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopicServiceServer).CreateTopic(ctx, req.(*Topic))
	}
	return interceptor(ctx, in, info, handler)
}

func _TopicService_GetTopics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopicServiceServer).GetTopics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.TopicService/GetTopics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopicServiceServer).GetTopics(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TopicService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.TopicService",
	HandlerType: (*TopicServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTopic",
			Handler:    _TopicService_CreateTopic_Handler,
		},
		{
			MethodName: "GetTopics",
			Handler:    _TopicService_GetTopics_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/proto/v1/topic.proto",
}

func init() { proto.RegisterFile("api/proto/v1/topic.proto", fileDescriptor_31f1388eb7d396aa) }

var fileDescriptor_31f1388eb7d396aa = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x41, 0x4f, 0x83, 0x40,
	0x10, 0x85, 0x85, 0x4a, 0x2d, 0x03, 0xe9, 0x61, 0xe2, 0x61, 0xe3, 0xa5, 0xc8, 0x89, 0xc4, 0x04,
	0x42, 0xfd, 0x09, 0x1e, 0x1a, 0xaf, 0xab, 0x77, 0x83, 0x30, 0xd1, 0x4d, 0x4c, 0x77, 0xdd, 0x1d,
	0x49, 0xfc, 0x03, 0xfe, 0x6e, 0xc3, 0x20, 0xa9, 0x7a, 0xdb, 0xf7, 0xbd, 0x99, 0xcd, 0x7b, 0x03,
	0xaa, 0x73, 0xa6, 0x71, 0xde, 0xb2, 0x6d, 0xc6, 0xb6, 0x61, 0xeb, 0x4c, 0x5f, 0x8b, 0xc4, 0x78,
	0x6c, 0xcb, 0xaf, 0x08, 0x92, 0xc7, 0x89, 0xe1, 0x16, 0x62, 0x33, 0xa8, 0xa8, 0x88, 0xaa, 0x54,
	0xc7, 0x66, 0xc0, 0x4b, 0x48, 0xd8, 0xf0, 0x1b, 0xa9, 0x58, 0xd0, 0x2c, 0xb0, 0x80, 0x6c, 0xa0,
	0xd0, 0x7b, 0xe3, 0xd8, 0xd8, 0xa3, 0x5a, 0x89, 0xf7, 0x1b, 0x4d, 0x7b, 0xce, 0x9b, 0x9e, 0xd4,
	0x79, 0x11, 0x55, 0x89, 0x9e, 0x05, 0xee, 0x20, 0xeb, 0x3b, 0xa6, 0x17, 0xeb, 0x3f, 0x9f, 0xcc,
	0xa0, 0x12, 0xd9, 0x83, 0x05, 0xdd, 0x0f, 0x65, 0x0e, 0x70, 0x20, 0xd6, 0xf4, 0xfe, 0x41, 0x81,
	0xcb, 0x57, 0xd8, 0x68, 0x0a, 0xce, 0x1e, 0x03, 0xa1, 0x82, 0x8b, 0xde, 0x53, 0xc7, 0x34, 0xa7,
	0xdb, 0xe8, 0x45, 0xe2, 0x0e, 0x12, 0xe9, 0x23, 0x11, 0xb3, 0x7d, 0x5a, 0x8f, 0x6d, 0x2d, 0x65,
	0xf4, 0xcc, 0xf1, 0x1a, 0xd6, 0xf2, 0x08, 0x6a, 0x55, 0xac, 0xfe, 0x4e, 0xfc, 0x18, 0x7b, 0x82,
	0x5c, 0xc0, 0x03, 0xf9, 0x71, 0x0a, 0x5a, 0x41, 0x76, 0x27, 0xdf, 0xcf, 0x57, 0x39, 0x6d, 0x5c,
	0xe5, 0xd3, 0x73, 0x49, 0x55, 0x9e, 0xe1, 0x0d, 0xa4, 0x07, 0x62, 0xf1, 0x02, 0x6e, 0x27, 0xf3,
	0x54, 0xe0, 0xff, 0xf0, 0xf3, 0x5a, 0x4e, 0x7e, 0xfb, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x7d, 0x17,
	0xc8, 0x25, 0x8e, 0x01, 0x00, 0x00,
}
